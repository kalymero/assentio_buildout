[buildout]
extends = base.cfg

parts += gunicorn_configuration 
         start_gunicorn
         mketc
         mkconfig
         postgresql
         postgresqlinit
         psycopg2
         supervisord
         backup_db
             
eggs += gunicorn 
        psycopg2

[sources]
assentio = git git://github.com/kalymero/assentio.git branch=production

[versions]
collective.recipe.supervisor = 0.17
collective.recipe.template = 1.9
gunicorn = 0.14.6
iw.recipe.cmd = 0.3
meld3 = 0.6.8
psycopg2 = 2.4.5
supervisor = 3.0a12
z3c.recipe.mkdir = 0.5
zc.recipe.cmmi = 1.3.5

[config]
template_directory = ${buildout:directory}/templates
etc_directory = ${buildout:directory}/etc
postgres.port = 24004
postgres.user = admin
postgres.password = admin
postgres.database = assentio
supervisor.port = 9001
supervisor.user = admin
supervisor.password = admin
supervisor.host = HOSTNAME

[mketc]
recipe = z3c.recipe.mkdir
paths = ${config:etc_directory}
        ${buildout:directory}/var/log
        ${buildout:directory}/var/backup
    

[gunicorn_configuration]
recipe = collective.recipe.template
input = ${config:template_directory}/gunicorn.conf.py.in 
output = ${config:etc_directory}/gunicorn.conf.py

[start_gunicorn]
recipe = collective.recipe.template
input = ${config:template_directory}/start_gunicorn.in 
output = ${buildout:bin-directory}/start_gunicorn
mode = 0755

[flask_configuration]
content = DEBUG=False
          TESTING=False
          SECRET_KEY="pick_your_secret_key"
          SQLALCHEMY_DATABASE_URI="postgresql://${config:postgres.user}:${config:postgres.password}@localhost:${config:postgres.port}/${config:postgres.database}"

[mkconfig]
recipe = collective.recipe.template
input = inline:
    ${flask_configuration:content}
output = ${config:etc_directory}/config.py

[postgresql]
recipe = zc.recipe.cmmi
url = http://ftp.postgresql.org/pub/source/v9.1.5/postgresql-9.1.5.tar.gz
extra_options =
    --with-pgport=${config:postgres.port}

[postgresqlinit]
recipe = iw.recipe.cmd
on_install = true
on_update = true
datadir = ${buildout:directory}/var/postgresql
cmds =
    test -e ${postgresqlinit:datadir} && exit 0
    ${postgresql:location}/bin/initdb --encoding=unicode -D ${postgresqlinit:datadir}
    ${postgresql:location}/bin/postgres --single -D ${postgresqlinit:datadir} \
            template1 << EOF
        CREATE USER ${config:postgres.user} WITH PASSWORD '${config:postgres.password}' CREATEDB ;
        CREATE DATABASE ${config:postgres.database} OWNER ${config:postgres.user};
    EOF
    echo 'host all ${config:postgres.user} 0.0.0.0/0 md5' \
        >> ${postgresqlinit:datadir}/pg_hba.conf
    echo "listen_addresses = '127.0.0.1'" >> ${postgresqlinit:datadir}/postgresql.conf
    echo "log_connections = on" >> ${postgresqlinit:datadir}/postgresql.conf
    echo "log_statement = 'all'" >> ${postgresqlinit:datadir}/postgresql.conf
    

[psycopg2-env]
PATH=${postgresql:location}/bin:%(PATH)s

[psycopg2]
recipe = zc.recipe.egg:custom
environment = psycopg2-env
rpath = ${postgresql:location}/lib

[supervisord]
recipe = collective.recipe.supervisor
serverurl = ${config:supervisor.host}
port = ${config:supervisor.port}
user = ${config:supervisor.user}
password = ${config:supervisor.password}
programs = 
       10 postgres ${postgresql:location}/bin/postmaster [-D ${postgresqlinit:datadir}]
       20 gunicorn ${buildout:bin-directory}/gunicorn [-c ${config:etc_directory}/gunicorn.conf.py assentio:app] ${buildout:bin-directory} 

[backup_db]
recipe = collective.recipe.template
input = ${config:template_directory}/backup_db.in 
output = ${buildout:bin-directory}/backup_db
mode = 0755
